{"ast":null,"code":"import axios from 'axios';\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  posts: [],\n  status: 'idle',\n  error: null\n};\nexport const fetchPosts = createAsyncThunk('posts/fetchPosts', async () => {\n  const response = await axios.get('http://localhost:8000/api/producer');\n  return response.data;\n});\nconst postsSlice = createSlice({\n  name: 'posts',\n  initialState,\n  reducers: {},\n  extraReducers(builder) {\n    builder.addCase(fetchPosts.pending, (state, action) => {\n      state.status = 'loading';\n    }).addCase(fetchPosts.fulfilled, (state, action) => {\n      state.status = 'succeeded';\n      // Add any fetched posts to the array\n      state.posts = state.posts.concat(action.payload);\n    }).addCase(fetchPosts.rejected, (state, action) => {\n      state.status = 'failed';\n      state.error = action.error.message;\n    });\n  }\n});\nexport default postsSlice.reducer;","map":{"version":3,"names":["axios","createAsyncThunk","createSlice","initialState","posts","status","error","fetchPosts","response","get","data","postsSlice","name","reducers","extraReducers","builder","addCase","pending","state","action","fulfilled","concat","payload","rejected","message","reducer"],"sources":["/Users/space/Desktop/yeccom/src/features/posts/postsSlice.js"],"sourcesContent":["import axios from 'axios'\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\n\n\nconst initialState = {\n    posts: [],\n    status: 'idle',\n    error: null\n}\n\nexport const fetchPosts = createAsyncThunk('posts/fetchPosts', async () => {\n    const response = await axios.get('http://localhost:8000/api/producer')\n    return response.data\n})\n\nconst postsSlice = createSlice({\n    name: 'posts',\n    initialState,\n    reducers: {},\n    extraReducers (builder) {\n        builder\n            .addCase(fetchPosts.pending, (state, action) => {\n                state.status = 'loading'\n            })\n            .addCase(fetchPosts.fulfilled, (state, action) => {\n                state.status = 'succeeded'\n                // Add any fetched posts to the array\n                state.posts = state.posts.concat(action.payload)\n            })\n            .addCase(fetchPosts.rejected, (state, action) => {\n                state.status = 'failed'\n                state.error = action.error.message\n            })\n    }\n})\n\nexport default postsSlice.reducer\n\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAGhE,MAAMC,YAAY,GAAG;EACjBC,KAAK,EAAE,EAAE;EACTC,MAAM,EAAE,MAAM;EACdC,KAAK,EAAE;AACX,CAAC;AAED,OAAO,MAAMC,UAAU,GAAGN,gBAAgB,CAAC,kBAAkB,EAAE,YAAY;EACvE,MAAMO,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,oCAAoC,CAAC;EACtE,OAAOD,QAAQ,CAACE,IAAI;AACxB,CAAC,CAAC;AAEF,MAAMC,UAAU,GAAGT,WAAW,CAAC;EAC3BU,IAAI,EAAE,OAAO;EACbT,YAAY;EACZU,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,CAAEC,OAAO,EAAE;IACpBA,OAAO,CACFC,OAAO,CAACT,UAAU,CAACU,OAAO,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC5CD,KAAK,CAACb,MAAM,GAAG,SAAS;IAC5B,CAAC,CAAC,CACDW,OAAO,CAACT,UAAU,CAACa,SAAS,EAAE,CAACF,KAAK,EAAEC,MAAM,KAAK;MAC9CD,KAAK,CAACb,MAAM,GAAG,WAAW;MAC1B;MACAa,KAAK,CAACd,KAAK,GAAGc,KAAK,CAACd,KAAK,CAACiB,MAAM,CAACF,MAAM,CAACG,OAAO,CAAC;IACpD,CAAC,CAAC,CACDN,OAAO,CAACT,UAAU,CAACgB,QAAQ,EAAE,CAACL,KAAK,EAAEC,MAAM,KAAK;MAC7CD,KAAK,CAACb,MAAM,GAAG,QAAQ;MACvBa,KAAK,CAACZ,KAAK,GAAGa,MAAM,CAACb,KAAK,CAACkB,OAAO;IACtC,CAAC,CAAC;EACV;AACJ,CAAC,CAAC;AAEF,eAAeb,UAAU,CAACc,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}