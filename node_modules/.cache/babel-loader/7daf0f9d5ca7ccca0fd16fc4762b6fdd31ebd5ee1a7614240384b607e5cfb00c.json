{"ast":null,"code":"import { createAsyncThunk } from '@reduxjs/toolkit';\nconst initialState = {\n  posts: [],\n  status: 'idle',\n  error: null\n};\nexport const fetchPosts = createAsyncThunk('posts/fetchPosts', async () => {\n  const response = await client.get('/fakeApi/posts');\n  return response.data;\n});\nconst postsSlice = createSlice({\n  name: 'posts',\n  initialState,\n  reducers: {},\n  extraReducers: {\n    [fetchPosts.pending]: (state, action) => {\n      state.status = 'loading';\n    }\n  }\n});","map":{"version":3,"names":["createAsyncThunk","initialState","posts","status","error","fetchPosts","response","client","get","data","postsSlice","createSlice","name","reducers","extraReducers","pending","state","action"],"sources":["/Users/space/Desktop/yeccom/src/features/posts/postsSlice.js"],"sourcesContent":["import { createAsyncThunk } from '@reduxjs/toolkit'\n\n\nconst initialState = {\n    posts: [],\n    status: 'idle',\n    error: null\n}\n\nexport const fetchPosts = createAsyncThunk('posts/fetchPosts', async () => {\n    const response = await client.get('/fakeApi/posts')\n    return response.data\n})\n\nconst postsSlice = createSlice({\n    name: 'posts',\n    initialState,\n    reducers: {},\n    extraReducers: {\n        [fetchPosts.pending]: (state, action) => {\n            state.status = 'loading'\n        }\n    }\n})\n\n"],"mappings":"AAAA,SAASA,gBAAgB,QAAQ,kBAAkB;AAGnD,MAAMC,YAAY,GAAG;EACjBC,KAAK,EAAE,EAAE;EACTC,MAAM,EAAE,MAAM;EACdC,KAAK,EAAE;AACX,CAAC;AAED,OAAO,MAAMC,UAAU,GAAGL,gBAAgB,CAAC,kBAAkB,EAAE,YAAY;EACvE,MAAMM,QAAQ,GAAG,MAAMC,MAAM,CAACC,GAAG,CAAC,gBAAgB,CAAC;EACnD,OAAOF,QAAQ,CAACG,IAAI;AACxB,CAAC,CAAC;AAEF,MAAMC,UAAU,GAAGC,WAAW,CAAC;EAC3BC,IAAI,EAAE,OAAO;EACbX,YAAY;EACZY,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAE;IACX,CAACT,UAAU,CAACU,OAAO,GAAG,CAACC,KAAK,EAAEC,MAAM,KAAK;MACrCD,KAAK,CAACb,MAAM,GAAG,SAAS;IAC5B;EACJ;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}