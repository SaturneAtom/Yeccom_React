{"ast":null,"code":"import axios from 'axios';\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  posts: [],\n  status: 'idle',\n  error: null\n};\nexport const fetchPosts = createAsyncThunk('posts/fetchPosts', async () => {\n  const response = await axios.get('http://localhost:8000/api/producer');\n  return response.data;\n});\nconst postsSlice = createSlice({\n  name: 'producer',\n  initialState,\n  reducers: {},\n  extraReducers: {\n    [fetchPosts.pending]: (state, action) => {\n      state.status = 'loading';\n    },\n    [fetchPosts.fulfilled]: (state, action) => {\n      state.status = 'succeeded';\n      // Add any fetched posts to the array\n      state.posts = state.posts.concat(action.payload);\n    },\n    [fetchPosts.rejected]: (state, action) => {\n      state.status = 'failed';\n      state.error = action.error.message;\n    }\n  }\n});\nexport default postsSlice.reducer;","map":{"version":3,"names":["axios","createAsyncThunk","createSlice","initialState","posts","status","error","fetchPosts","response","get","data","postsSlice","name","reducers","extraReducers","pending","state","action","fulfilled","concat","payload","rejected","message","reducer"],"sources":["/Users/space/Desktop/yeccom/src/features/posts/postsSlice.js"],"sourcesContent":["import axios from 'axios'\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\n\n\nconst initialState = {\n    posts: [],\n    status: 'idle',\n    error: null\n}\n\nexport const fetchPosts = createAsyncThunk('posts/fetchPosts', async () => {\n    const response = await axios.get('http://localhost:8000/api/producer')\n    return response.data\n})\n\nconst postsSlice = createSlice({\n    name: 'producer',\n    initialState,\n    reducers: {},\n    extraReducers: {\n        [fetchPosts.pending]: (state, action) => {\n            state.status = 'loading'\n        },\n        [fetchPosts.fulfilled]: (state, action) => {\n            state.status = 'succeeded'\n            // Add any fetched posts to the array\n            state.posts = state.posts.concat(action.payload)\n        },\n        [fetchPosts.rejected]: (state, action) => {\n            state.status = 'failed'\n            state.error = action.error.message\n        }\n    }\n})\n\nexport default postsSlice.reducer\n\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAGhE,MAAMC,YAAY,GAAG;EACjBC,KAAK,EAAE,EAAE;EACTC,MAAM,EAAE,MAAM;EACdC,KAAK,EAAE;AACX,CAAC;AAED,OAAO,MAAMC,UAAU,GAAGN,gBAAgB,CAAC,kBAAkB,EAAE,YAAY;EACvE,MAAMO,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,oCAAoC,CAAC;EACtE,OAAOD,QAAQ,CAACE,IAAI;AACxB,CAAC,CAAC;AAEF,MAAMC,UAAU,GAAGT,WAAW,CAAC;EAC3BU,IAAI,EAAE,UAAU;EAChBT,YAAY;EACZU,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAE;IACX,CAACP,UAAU,CAACQ,OAAO,GAAG,CAACC,KAAK,EAAEC,MAAM,KAAK;MACrCD,KAAK,CAACX,MAAM,GAAG,SAAS;IAC5B,CAAC;IACD,CAACE,UAAU,CAACW,SAAS,GAAG,CAACF,KAAK,EAAEC,MAAM,KAAK;MACvCD,KAAK,CAACX,MAAM,GAAG,WAAW;MAC1B;MACAW,KAAK,CAACZ,KAAK,GAAGY,KAAK,CAACZ,KAAK,CAACe,MAAM,CAACF,MAAM,CAACG,OAAO,CAAC;IACpD,CAAC;IACD,CAACb,UAAU,CAACc,QAAQ,GAAG,CAACL,KAAK,EAAEC,MAAM,KAAK;MACtCD,KAAK,CAACX,MAAM,GAAG,QAAQ;MACvBW,KAAK,CAACV,KAAK,GAAGW,MAAM,CAACX,KAAK,CAACgB,OAAO;IACtC;EACJ;AACJ,CAAC,CAAC;AAEF,eAAeX,UAAU,CAACY,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}